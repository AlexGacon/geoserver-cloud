name: Config-service native image
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - ".github/workflows/config-service-native-image.yaml"
      - "pom.xml"
      - "src/pom.xml"
      - "src/apps/infrastructure/pom.xml"
      - "src/apps/infrastructure/config/**"
  pull_request:
    paths:
      - ".github/workflows/config-service-native-image.yaml"
      - "pom.xml"
      - "src/pom.xml"
      - "src/apps/infrastructure/pom.xml"
      - "src/apps/infrastructure/config/**"

jobs:
  build:
    name: config-service native image
    runs-on:
      - ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Login to Docker Hub
      if: ${{ (github.repository == 'geoserver/geoserver-cloud') && (github.event_name != 'pull_request') }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Resolve image name
      id: version
      run: |
         echo '::echo::on'
         echo ::set-output name=IMAGE_NAME::$(./mvnw -pl :gs-cloud-config-service help:evaluate -Dexpression=spring-boot.build-image.imageName -Pnative,-geoserver,-docker,-docker-openj9 -q -DforceStdout)

    - name: Build config-service native image
      run: |
        ./mvnw -pl :gs-cloud-config-service install -am -Dfmt.action=check -ntp -P-geoserver,-docker,-docker-openj9
        ./mvnw -pl :gs-cloud-config-service spring-boot:build-image -Pnative,-geoserver -ntp -DskipTests -Dfmt.skip

    - name: Push image to docker.io
      if: ${{ (github.repository == 'geoserver/geoserver-cloud') && (github.event_name != 'pull_request') }}
      run: |
        docker push ${{ steps.version.outputs.IMAGE_NAME }}
